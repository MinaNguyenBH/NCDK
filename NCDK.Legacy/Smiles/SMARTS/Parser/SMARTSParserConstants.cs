/* Generated By:JJTree&JavaCC: Do not edit this line. SMARTSParserConstants.java */
/* Copyright (C) 2004-2007  The Chemistry Development Kit (CDK) project
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 * (or see http://www.gnu.org/copyleft/lesser.html)
 */

using System.Collections.Generic;

namespace NCDK.Smiles.SMARTS.Parser
{
    /// <summary>
    /// Token literal values and constants.
    /// Generated by org.javacc.parser.OtherFilesGen#Start()
    /// </summary>
    [System.Obsolete]
    internal static class SMARTSParserConstants
    {
        /// <summary>End of File.</summary>
        public const int EOF = 0;
        /// <summary>RegularExpression Id.</summary>
        public const int WS = 1;
        /// <summary>RegularExpression Id.</summary>
        public const int L_AND = 2;
        /// <summary>RegularExpression Id.</summary>
        public const int H_AND = 3;
        /// <summary>RegularExpression Id.</summary>
        public const int OR = 4;
        /// <summary>RegularExpression Id.</summary>
        public const int NOT = 5;
        /// <summary>RegularExpression Id.</summary>
        public const int S_BOND = 6;
        /// <summary>RegularExpression Id.</summary>
        public const int UP_S_BOND = 7;
        /// <summary>RegularExpression Id.</summary>
        public const int DN_S_BOND = 8;
        /// <summary>RegularExpression Id.</summary>
        public const int UP_OR_UNSPECIFIED_S_BOND = 9;
        /// <summary>RegularExpression Id.</summary>
        public const int DN_OR_UNSPECIFIED_S_BOND = 10;
        /// <summary>RegularExpression Id.</summary>
        public const int D_BOND = 11;
        /// <summary>RegularExpression Id.</summary>
        public const int T_BOND = 12;
        /// <summary>RegularExpression Id.</summary>
        public const int AR_BOND = 13;
        /// <summary>RegularExpression Id.</summary>
        public const int ANY_BOND = 14;
        /// <summary>RegularExpression Id.</summary>
        public const int R_BOND = 15;
        /// <summary>RegularExpression Id.</summary>
        public const int c = 16;
        /// <summary>RegularExpression Id.</summary>
        public const int n = 17;
        /// <summary>RegularExpression Id.</summary>
        public const int o = 18;
        /// <summary>RegularExpression Id.</summary>
        public const int s = 19;
        /// <summary>RegularExpression Id.</summary>
        public const int p = 20;
        /// <summary>RegularExpression Id.</summary>
        public const int as_ = 21;
        /// <summary>RegularExpression Id.</summary>
        public const int se = 22;
        /// <summary>RegularExpression Id.</summary>
        public const int B = 23;
        /// <summary>RegularExpression Id.</summary>
        public const int C = 24;
        /// <summary>RegularExpression Id.</summary>
        public const int N = 25;
        /// <summary>RegularExpression Id.</summary>
        public const int O = 26;
        /// <summary>RegularExpression Id.</summary>
        public const int F = 27;
        /// <summary>RegularExpression Id.</summary>
        public const int P = 28;
        /// <summary>RegularExpression Id.</summary>
        public const int S = 29;
        /// <summary>RegularExpression Id.</summary>
        public const int CL = 30;
        /// <summary>RegularExpression Id.</summary>
        public const int BR = 31;
        /// <summary>RegularExpression Id.</summary>
        public const int I = 32;
        /// <summary>RegularExpression Id.</summary>
        public const int WILDCARD = 33;
        /// <summary>RegularExpression Id.</summary>
        public const int a = 34;
        /// <summary>RegularExpression Id.</summary>
        public const int A = 35;
        /// <summary>RegularExpression Id.</summary>
        public const int CARET = 36;
        /// <summary>RegularExpression Id.</summary>
        public const int Q_MARK = 37;
        /// <summary>RegularExpression Id.</summary>
        public const int DIGIT = 38;
        /// <summary>RegularExpression Id.</summary>
        public const int L_BRACKET = 39;
        /// <summary>RegularExpression Id.</summary>
        public const int L_PAREN = 40;
        /// <summary>RegularExpression Id.</summary>
        public const int R_PAREN = 41;
        /// <summary>RegularExpression Id.</summary>
        public const int R_BRACKET = 42;
        /// <summary>RegularExpression Id.</summary>
        public const int DOLLAR = 43;
        /// <summary>RegularExpression Id.</summary>
        public const int PLUS = 44;
        /// <summary>RegularExpression Id.</summary>
        public const int h = 45;
        /// <summary>RegularExpression Id.</summary>
        public const int D = 46;
        /// <summary>RegularExpression Id.</summary>
        public const int R = 47;
        /// <summary>RegularExpression Id.</summary>
        public const int r = 48;
        /// <summary>RegularExpression Id.</summary>
        public const int v = 49;
        /// <summary>RegularExpression Id.</summary>
        public const int X = 50;
        /// <summary>RegularExpression Id.</summary>
        public const int x = 51;
        /// <summary>RegularExpression Id.</summary>
        public const int G = 52;
        /// <summary>RegularExpression Id.</summary>
        public const int HX = 53;
        /// <summary>RegularExpression Id.</summary>
        public const int H = 54;
        /// <summary>RegularExpression Id.</summary>
        public const int HE = 55;
        /// <summary>RegularExpression Id.</summary>
        public const int LI = 56;
        /// <summary>RegularExpression Id.</summary>
        public const int BE = 57;
        /// <summary>RegularExpression Id.</summary>
        public const int NE = 58;
        /// <summary>RegularExpression Id.</summary>
        public const int NA = 59;
        /// <summary>RegularExpression Id.</summary>
        public const int MG = 60;
        /// <summary>RegularExpression Id.</summary>
        public const int AL = 61;
        /// <summary>RegularExpression Id.</summary>
        public const int SI = 62;
        /// <summary>RegularExpression Id.</summary>
        public const int AR = 63;
        /// <summary>RegularExpression Id.</summary>
        public const int K = 64;
        /// <summary>RegularExpression Id.</summary>
        public const int CA = 65;
        /// <summary>RegularExpression Id.</summary>
        public const int TI = 66;
        /// <summary>RegularExpression Id.</summary>
        public const int V = 67;
        /// <summary>RegularExpression Id.</summary>
        public const int CR = 68;
        /// <summary>RegularExpression Id.</summary>
        public const int MN = 69;
        /// <summary>RegularExpression Id.</summary>
        public const int FE = 70;
        /// <summary>RegularExpression Id.</summary>
        public const int CO = 71;
        /// <summary>RegularExpression Id.</summary>
        public const int NI = 72;
        /// <summary>RegularExpression Id.</summary>
        public const int CU = 73;
        /// <summary>RegularExpression Id.</summary>
        public const int ZN = 74;
        /// <summary>RegularExpression Id.</summary>
        public const int GA = 75;
        /// <summary>RegularExpression Id.</summary>
        public const int GE = 76;
        /// <summary>RegularExpression Id.</summary>
        public const int AS = 77;
        /// <summary>RegularExpression Id.</summary>
        public const int SE = 78;
        /// <summary>RegularExpression Id.</summary>
        public const int KR = 79;
        /// <summary>RegularExpression Id.</summary>
        public const int RB = 80;
        /// <summary>RegularExpression Id.</summary>
        public const int SR = 81;
        /// <summary>RegularExpression Id.</summary>
        public const int Y = 82;
        /// <summary>RegularExpression Id.</summary>
        public const int ZR = 83;
        /// <summary>RegularExpression Id.</summary>
        public const int NB = 84;
        /// <summary>RegularExpression Id.</summary>
        public const int MO = 85;
        /// <summary>RegularExpression Id.</summary>
        public const int TC = 86;
        /// <summary>RegularExpression Id.</summary>
        public const int RU = 87;
        /// <summary>RegularExpression Id.</summary>
        public const int RH = 88;
        /// <summary>RegularExpression Id.</summary>
        public const int PD = 89;
        /// <summary>RegularExpression Id.</summary>
        public const int AG = 90;
        /// <summary>RegularExpression Id.</summary>
        public const int CD = 91;
        /// <summary>RegularExpression Id.</summary>
        public const int IN = 92;
        /// <summary>RegularExpression Id.</summary>
        public const int SN = 93;
        /// <summary>RegularExpression Id.</summary>
        public const int SB = 94;
        /// <summary>RegularExpression Id.</summary>
        public const int TE = 95;
        /// <summary>RegularExpression Id.</summary>
        public const int XE = 96;
        /// <summary>RegularExpression Id.</summary>
        public const int CS = 97;
        /// <summary>RegularExpression Id.</summary>
        public const int BA = 98;
        /// <summary>RegularExpression Id.</summary>
        public const int LA = 99;
        /// <summary>RegularExpression Id.</summary>
        public const int HF = 100;
        /// <summary>RegularExpression Id.</summary>
        public const int TA = 101;
        /// <summary>RegularExpression Id.</summary>
        public const int W = 102;
        /// <summary>RegularExpression Id.</summary>
        public const int RE = 103;
        /// <summary>RegularExpression Id.</summary>
        public const int OS = 104;
        /// <summary>RegularExpression Id.</summary>
        public const int IR = 105;
        /// <summary>RegularExpression Id.</summary>
        public const int PT = 106;
        /// <summary>RegularExpression Id.</summary>
        public const int AU = 107;
        /// <summary>RegularExpression Id.</summary>
        public const int HG = 108;
        /// <summary>RegularExpression Id.</summary>
        public const int TL = 109;
        /// <summary>RegularExpression Id.</summary>
        public const int PB = 110;
        /// <summary>RegularExpression Id.</summary>
        public const int BI = 111;
        /// <summary>RegularExpression Id.</summary>
        public const int PO = 112;
        /// <summary>RegularExpression Id.</summary>
        public const int AT = 113;
        /// <summary>RegularExpression Id.</summary>
        public const int RN = 114;
        /// <summary>RegularExpression Id.</summary>
        public const int FR = 115;
        /// <summary>RegularExpression Id.</summary>
        public const int RA = 116;
        /// <summary>RegularExpression Id.</summary>
        public const int AC = 117;
        /// <summary>RegularExpression Id.</summary>
        public const int TH = 118;
        /// <summary>RegularExpression Id.</summary>
        public const int PA = 119;
        /// <summary>RegularExpression Id.</summary>
        public const int U = 120;
        /// <summary>RegularExpression Id.</summary>
        public const int PU = 121;
        /// <summary>RegularExpression Id.</summary>
        public const int AM = 122;
        /// <summary>RegularExpression Id.</summary>
        public const int CM = 123;
        /// <summary>RegularExpression Id.</summary>
        public const int BK = 124;
        /// <summary>RegularExpression Id.</summary>
        public const int CF = 125;
        /// <summary>RegularExpression Id.</summary>
        public const int ES = 126;
        /// <summary>RegularExpression Id.</summary>
        public const int FM = 127;
        /// <summary>RegularExpression Id.</summary>
        public const int MD = 128;
        /// <summary>RegularExpression Id.</summary>
        public const int NO = 129;
        /// <summary>RegularExpression Id.</summary>
        public const int LR = 130;
        /// <summary>RegularExpression Id.</summary>
        public const int NP = 131;
        /// <summary>RegularExpression Id.</summary>
        public const int CE = 132;
        /// <summary>RegularExpression Id.</summary>
        public const int ND = 133;
        /// <summary>RegularExpression Id.</summary>
        public const int PM = 134;
        /// <summary>RegularExpression Id.</summary>
        public const int SM = 135;
        /// <summary>RegularExpression Id.</summary>
        public const int EU = 136;
        /// <summary>RegularExpression Id.</summary>
        public const int GD = 137;
        /// <summary>RegularExpression Id.</summary>
        public const int TB = 138;
        /// <summary>RegularExpression Id.</summary>
        public const int DY = 139;
        /// <summary>RegularExpression Id.</summary>
        public const int HO = 140;
        /// <summary>RegularExpression Id.</summary>
        public const int ER = 141;
        /// <summary>RegularExpression Id.</summary>
        public const int TM = 142;
        /// <summary>RegularExpression Id.</summary>
        public const int YB = 143;
        /// <summary>RegularExpression Id.</summary>
        public const int LU = 144;
        /// <summary>RegularExpression Id.</summary>
        public const int PR = 145;
        /// <summary>RegularExpression Id.</summary>
        public const int SC = 146;

        /// <summary>Lexical state.</summary>
        public const int ATOM_EXPRESSION = 0;
        /// <summary>Lexical state.</summary>
        public const int Default = 1;

        /// <summary>Literal token values.</summary>
        public static IReadOnlyList<string> TokenImage = new string[] 
        {
            "<EOF>",
            "<WS>",
            "\";\"",
            "\"&\"",
            "\",\"",
            "\"!\"",
            "\"-\"",
            "\"/\"",
            "\"\\\\\"",
            "\"/?\"",
            "\"\\\\?\"",
            "\"=\"",
            "\"#\"",
            "\":\"",
            "\"~\"",
            "\"@\"",
            "\"c\"",
            "\"n\"",
            "\"o\"",
            "\"s\"",
            "\"p\"",
            "\"as\"",
            "\"se\"",
            "\"B\"",
            "\"C\"",
            "\"N\"",
            "\"O\"",
            "\"F\"",
            "\"P\"",
            "\"S\"",
            "\"Cl\"",
            "\"Br\"",
            "\"I\"",
            "\"*\"",
            "\"a\"",
            "\"A\"",
            "\"^\"",
            "\"?\"",
            "<DIGIT>",
            "\"[\"",
            "\"(\"",
            "\")\"",
            "\"]\"",
            "\"$\"",
            "\"+\"",
            "\"h\"",
            "\"D\"",
            "\"R\"",
            "\"r\"",
            "\"v\"",
            "\"X\"",
            "\"x\"",
            "\"G\"",
            "\"#X\"",
            "\"H\"",
            "\"He\"",
            "\"Li\"",
            "\"Be\"",
            "\"Ne\"",
            "\"Na\"",
            "\"Mg\"",
            "\"Al\"",
            "\"Si\"",
            "\"Ar\"",
            "\"K\"",
            "\"Ca\"",
            "\"Ti\"",
            "\"V\"",
            "\"Cr\"",
            "\"Mn\"",
            "\"Fe\"",
            "\"Co\"",
            "\"Ni\"",
            "\"Cu\"",
            "\"Zn\"",
            "\"Ga\"",
            "\"Ge\"",
            "\"As\"",
            "\"Se\"",
            "\"Kr\"",
            "\"Rb\"",
            "\"Sr\"",
            "\"Y\"",
            "\"Zr\"",
            "\"Nb\"",
            "\"Mo\"",
            "\"Tc\"",
            "\"Ru\"",
            "\"Rh\"",
            "\"Pd\"",
            "\"Ag\"",
            "\"Cd\"",
            "\"In\"",
            "\"Sn\"",
            "\"Sb\"",
            "\"Te\"",
            "\"Xe\"",
            "\"Cs\"",
            "\"Ba\"",
            "\"La\"",
            "\"Hf\"",
            "\"Ta\"",
            "\"W\"",
            "\"Re\"",
            "\"Os\"",
            "\"Ir\"",
            "\"Pt\"",
            "\"Au\"",
            "\"Hg\"",
            "\"Tl\"",
            "\"Pb\"",
            "\"Bi\"",
            "\"Po\"",
            "\"At\"",
            "\"Rn\"",
            "\"Fr\"",
            "\"Ra\"",
            "\"Ac\"",
            "\"Th\"",
            "\"Pa\"",
            "\"U\"",
            "\"Pu\"",
            "\"Am\"",
            "\"Cm\"",
            "\"Bk\"",
            "\"Cf\"",
            "\"Es\"",
            "\"Fm\"",
            "\"Md\"",
            "\"No\"",
            "\"Lr\"",
            "\"Np\"",
            "\"Ce\"",
            "\"Nd\"",
            "\"Pm\"",
            "\"Sm\"",
            "\"Eu\"",
            "\"Gd\"",
            "\"Tb\"",
            "\"Dy\"",
            "\"Ho\"",
            "\"Er\"",
            "\"Tm\"",
            "\"Yb\"",
            "\"Lu\"",
            "\"Pr\"",
            "\"Sc\"",
            "\">\"",
            "\".\"",
            "\"%\"",
            "\"--\"",
            "\"---\"",
            "\"----\"",
            "\"-----\"",
            "\"------\"",
            "\"-------\"",
            "\"--------\"",
            "\"++\"",
            "\"+++\"",
            "\"++++\"",
            "\"+++++\"",
            "\"++++++\"",
            "\"+++++++\"",
            "\"++++++++\"",
        };
    }
}
